apiVersion: v1
kind: Namespace
metadata:
  name: demo-app
---
# Component 1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-server
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-server
  template:
    metadata:
      labels:
        app: nginx-server
    spec:
      containers:
        - name: nginx
          image: nginx:1.27.5
          ports:
            - containerPort: 80
---
# Component 2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busybox-job
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox-job
  template:
    metadata:
      labels:
        app: busybox-job
    spec:
      containers:
        - name: busybox
          image: docker.io/busybox:1.36
          command: ['sleep', '3600']
---
# Component 3
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpine-task
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpine-task
  template:
    metadata:
      labels:
        app: alpine-task
    spec:
      containers:
        - name: alpine
          image: alpine:3.20
          command: ['sleep', '3600']
---
# Component 4
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cache
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cache
  template:
    metadata:
      labels:
        app: redis-cache
    spec:
      containers:
        - name: redis
          image: redis:7.2
          ports:
            - containerPort: 6379
---
# Component 5
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
        - name: postgres
          image: docker.io/postgres:17.5
          env:
            - name: POSTGRES_PASSWORD
              value: "demo"
---
# Component 6
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-server
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpd-server
  template:
    metadata:
      labels:
        app: httpd-server
    spec:
      containers:
        - name: httpd
          image: httpd:2.4
          ports:
            - containerPort: 80
---
# Component 7
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubuntu-worker
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ubuntu-worker
  template:
    metadata:
      labels:
        app: ubuntu-worker
    spec:
      containers:
        - name: ubuntu
          image: ubuntu:24.04
          command: ['sleep', '3600']
---
# Component 8
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-legacy
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-legacy
  template:
    metadata:
      labels:
        app: nginx-legacy
    spec:
      containers:
        - name: nginx-legacy
          image: docker.io/nginx:1.27.5
          ports:
            - containerPort: 80
---
# Component 9
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpine-legacy
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpine-legacy
  template:
    metadata:
      labels:
        app: alpine-legacy
    spec:
      containers:
        - name: alpine-legacy
          image: alpine:3.12
          command: ['sleep', '3600']
---
# Component 10
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scratch-container
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scratch-container
  template:
    metadata:
      labels:
        app: scratch-container
    spec:
      containers:
        - name: scratch
          image: gcr.io/distroless/static:nonroot
---
# Component 11
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-latest
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-latest
  template:
    metadata:
      labels:
        app: nginx-latest
    spec:
      containers:
        - name: nginx
          image: nginx:1.27.5
          ports:
            - containerPort: 80
---
# Component 12
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-server
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-server
  template:
    metadata:
      labels:
        app: node-server
    spec:
      containers:
        - name: node
          image: node:20-alpine
          command: ['node', '-e', 'console.log("Hello from Node")']
---
# Component 13
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
        - name: hello
          image: hello-world
---
# Component 14
apiVersion: apps/v1
kind: Deployment
metadata:
  name: debian-worker
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: debian-worker
  template:
    metadata:
      labels:
        app: debian-worker
    spec:
      containers:
        - name: debian
          image: debian:bookworm
          command: ['sleep', '3600']
